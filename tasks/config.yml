---
- name: config | generate wireguard keys
  ansible.builtin.shell: |
    set -euo pipefail
    umask 077
    wg genkey | tee {{ wireguard_path }}/privatekey | wg pubkey > {{ wireguard_path }}/publickey
  args:
    creates: "{{ wireguard_path }}/publickey"
    executable: /bin/bash

- name: config | read private key
  ansible.builtin.slurp:
    src: "{{ wireguard_path }}/privatekey"
  register: _wireguard_private_key
  ignore_errors: true

- name: config | read public key
  ansible.builtin.slurp:
    src: "{{ wireguard_path }}/publickey"
  register: _wireguard_public_key
  ignore_errors: true

- name: config | check mode placeholders
  ansible.builtin.set_fact:
    _wireguard_private_key:
      content: "Q0hFQ0tfTU9ERV9QUklWQVRFX0tFWV9QTEFDRUhPTERFUg=="
    _wireguard_public_key:
      content: "Q0hFQ0tfTU9ERV9QVUJMSUNfS0VZX1BMQUNFSE9MREVS"
  when:
    - ansible_check_mode
    - _wireguard_private_key.failed
    - _wireguard_public_key.failed

- name: config | full mesh network
  ansible.builtin.set_fact:
    _wireguard_hosts: "{{ ansible_play_hosts }}"
  when: wireguard_network|length == 0

- name: config | user controlled wireguard hosts
  ansible.builtin.set_fact:
    _wireguard_hosts: "{{ wireguard_network.get(inventory_hostname, []) }}"
  when: wireguard_network|length > 0

- name: config | check configured hosts are available
  ansible.builtin.assert:
    that:
      - item in ansible_play_hosts
    msg: "host '{{ item }}' is presented in wireguard configuration for '{{ inventory_hostname }}' but it's unavailable"
  loop: "{{ _wireguard_hosts }}"

- name: config | generate wireguard config
  ansible.builtin.template:
    src: wireguard.conf.j2
    dest: "{{ wireguard_path }}/{{ wireguard_network_name }}.conf"
    owner: root
    group: root
    mode: '0600'
  register: config
  notify: restart wg-quick
